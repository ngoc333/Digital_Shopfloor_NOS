<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="axfpSpread1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAARQgAAAIB
        AAAAAQAAAAAbAAAAQ29weXJpZ2h0IChjKSAxOTk1IEZhclBvaW50AAAAABUIAAAAAAgA4BcAABYSAABA
        AAAAAQAAAAAAAQEAAAAAAAAAAgAAAAAAAQEBAQIAAQAAAAAAAAADUuMLkY/OEZ3jAKoAS7hRAQAAALwC
        gKkDAAdDYWxpYnJpAcDAwADAwMAAAAABAgAAAAQAAAAAAAABAAAAAAEBAAABAQAAAAAAAAEAAAEPAA8A
        AIAQAACAEgAAgC4HAAADBC4HAABlAAgAAAABAD8AmAAAAAMAOQMAAAAAAAAAAAAAkAEAAAAAAAEAAAAA
        HAAAAE0AUwAgAFMAYQBuAHMAIABTAGUAcgBpAGYAAABv+v//AAAAAAAAAAC8AgAAAAAAAQAAAAAQAAAA
        QwBhAGwAaQBiAHIAaQAAAKD2//8AAAAAAAAAALwCAAAAAAABAAAAABAAAABDAGEAbABpAGIAcgBpAAAA
        CwAMAAAAAAAAAQEADAARAAAAAAAAAQAAAAAAAAAWABEAAAAAAQD8qfHSTWJQPyMACwAAAAAAAAEBRQAS
        AAAAcQAAAHIAAABzAAAARwAHAAAAAFEASwAAAAD0AQAAGAAAgBcAAIA5AwAAAAAAAAAAAACQAQAAAAAA
        AQAAAAAcAAAATQBTACAAUwBhAG4AcwAgAFMAZQByAGkAZgAAAEoABwAAAA9QAAgAAAALCFMACAAAAAAA
        VAAIAAAAAABXAAoAAAAAAAAAWAASAAAAAAAAAAAAAAAAAAAAaAASAAAAAAAzMzMzMzPjP///bwAIAAAA
        AgBwAAgAAAACAHEADAAAAP8AAAAAAHIA2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        cwAIAAAAAQB0AAgAAAAAAHUACAAAAAAAdgAMAAAADQAAgEsAegAIAAAAAAB7AAoAAAAAAAAAfAAIAAAA
        AAB9ACIBAABzlr4AQktjAFVpkQDX5vcA2ef5AL7U8QDD1vIAw9byALfS9AChut0AqrnNAKG63QCquc0A
        PG6vAFVpkQA8bq8A8pU2AJ62zgC7xNEAu8TRAPHAXADxwFwA/9WNAP/VjQDk7PcA5Oz3AKnE6QCMobYA
        5Oz3AOTs9wCpxOkAjKG2APKVNgCets4A3+LkAL3F0gD/1I0A8pM7APnZnwDxwWAA+fz9ANPc6QDY5/oA
        1eX5ALbS9QDZ5/kA////AP///wD///8At9L0AP///wCSpccAf6HRAKG63QB/odEAobrdAGpazQDY5/oA
        1eX5ALbS9QDZ5/kA6vH5ANjk9ADb5vUA6O/5AMfZ8wDD1vIAkrboAL7U8QAAAAAAAAAAAGQACAAAAAAA
        awAKAAAAAAAAARkADgAAAAIAAAAEAAAAQgAIAAAAAAAFABYAAAD//////////+Dg4AAAAAAABgASAAAA
        /////wAAAAAAACBADQAQAAAA//////////8CABMADAAAAAQAwMDAAB0ACAAAAAEAIgASAAAA/////6Rw
        PQrX4z1AJQAWAAAADwAAgBIAAIAQAACAFAAAgCoAGgAAAP//////////gAAAAAB9AAAAAAEARgAWAAAA
        /////////////////////0kACAAAAAAAVQAIAAAAAABWAAwAAAD/////AABLAAsAAAAAAAAAATAAEgAA
        AAAAAAD/////zAAAAAYAEgAAAAEAAAA9CtejcL0oQFsADAAAAAEAAAAAAAYAEgAAAAIAAAAfhetRuF4w
        QFsADAAAAAIAAAAAAEwACwAAAAAAAAABMAASAAAA/////wAAAADMAAAABQAWAAAA/////wEAAADg4OAA
        AMAAACoAGgAAAAEAAAABAAAAgAISAAB9AAAAAAEAOAAcAAAAAQAAAAEAAABEAC4AUABsAGEAbgAAACoA
        GgAAAAIAAAABAAAAggBCAAB9AAAAAAEAOAAWAAAAAgAAAAEAAAAxADIAMwAAAAUAFgAAAP////8CAAAA
        4ODgAD0AeQAqABoAAAABAAAAAgAAAIACEgAAfQAAAAABADgAHAAAAAEAAAACAAAAUgAuAFAAbABhAG4A
        AAAqABoAAAACAAAAAgAAAIIAQgAAfQAAAAABADgAFgAAAAIAAAACAAAANAA1ADYAAAAFABYAAAD/////
        AwAAAODg4AAAAP8AKgAaAAAAAQAAAAMAAACAAhIAAH0AAAAAAQA4ABgAAAABAAAAAwAAAFAAcgBvAGQA
        AAAqABoAAAACAAAAAwAAAIIAQgAAfQAAAAABADgAFgAAAAIAAAADAAAANwA4ADkAAAAFABYAAAD/////
        BAAAAODg4ADAQAAAKgAaAAAAAQAAAAQAAACAAhIAAH0AAAAAAQA4ABgAAAABAAAABAAAAFIAYQB0AGUA
        AAAqABoAAAACAAAABAAAAIIAQgAAfQAAAAABADgAGAAAAAIAAAAEAAAAMQAwAC4AMQAAAAEAAAABAAAA
        AQADAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9AEAAAAADwAAAAAA//7/AAAAAgACAP8AAAAA
        AAAAAAANAACASwAAAAAAAAs=
</value>
  </data>
</root>